#
# Cloud Provider
#

# Google access to use to run terraform. Usually admin service account to be able to create Google services.

#. gcp_project (required): ($ organization_canonical $)
#+ Google Cloud Platform project for new infrastructure.
gcp_project: ($ organization_canonical $)

#. gcp_region (required): europe-west1
#+ Google Cloud Platform region for new infrastructure.
gcp_region: europe-west1

#. gcp_zone (required): europe-west1-b
#+ Google Cloud Platform zone for new infrastructure.
gcp_zone: europe-west1-b

#. gcp_credentials_json (required): ((gcp.json_key))
#+ Google Cloud Platform credentials JSON for Terraform. See value format [here](https://docs.cycloid.io/advanced-guide/integrate-and-use-cycloid-credentials-manager.html#vault-in-the-pipeline)
gcp_credentials_json: ((gcp.json_key))


#
# Terraform remote state file
#

#. terraform_storage_bucket_name (required): ($ organization_canonical $)-terraform-remote-state
#+ AWS S3 bucket name to store terraform remote state file.
terraform_storage_bucket_name: ($ organization_canonical $)-terraform-remote-state


#
# Keypair to use for newly created instances
#

#. keypair_public (required): <Your_SSH_Public_key>
#+ The public SSH key to provision to instance for external access through SSH
keypair_public: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCx0xZvC63PN69c8zaNXz48w1LpRkC6YD5qfR1EXh9WtGgYSQ2I8BwaTtPYbcaqWmNT2NY5QpvsICBvJKJKz8qMPp5p12ePwzh/JYQJ92KaMVB8EAof6g9/MlmGVYnaPvZ38Z03wiEWCZh+FP3t9jT8ze8Ed8xNIuRqT1HRNkO6s/mm+LlJnTb0vWAVYkf8qbc1MIsHzn5Sj3bvVaaVnsVjdlVwGjXMZIJfK4jLQ7/Gbu5+O32zoq9xI8wRsb+2ilvv68oin+KONcb0wj4xMVh/3pyO/1Mva/VwftNxaOH0GS+BFngHspOQiYpxyKY/hkVPEpTDMebCLD34dHJULU8DOX1CMjR7cAr3dTx60FWVfm4gKePV0gneRXVE27PCwhyibcETpWQ0nlvwqtT4mnsIB1DqhlQiioBnB/3R62RjmRW24v1bj05HI6cQvEagKu9CsoO6cw9dMvEH4SwN3jW8GVnEFPcCMVMTFE2HVHsaOrX/fkanvA3zW3JCAST63pwqEnAzEzIOp3wyMs+uGh3+5iDFGDjdyMgNUaXDHNNnf3A7gHhEpok0naBJdm0KRY9MD4hKIr4WifW+12YHL04P9hAvzmOI4HC63Yg53KQ+lYZ2Grc9/wHVl3VCCVSngoqWkj5kBcp50gFk5NGE7/DjOj1kotYfZldDEhxFkNQu5w== olivier@oliviers-macbook-pro.home"


#
# Admin username for newly created instances
#

#. vm_os_user (required): admin
#+ Admin username for newly created instances
vm_os_user: admin


#
# Worker instance configuration
#

#. team_id (required): ""
#+ This parameter can be obtained in Cycloid console, by clicking on your profile picture at the top right corner, then organization settings, then use the value of the ci_team_member field
team_id: ""

#. worker_key (required): ((cycloid-worker-keys.ssh_prv))
#+ Leave default value if the worker is intended to run for the current organization. Otherwise, add Cycloid-worker-keys.ssh_prv credentials of the target organization
worker_key: ((cycloid-worker-keys.ssh_prv))


#
# Stack Git repository
#

#. stack_git_repository (required): ($ scs_url $)
#+ Git repository URL containing the stack.
stack_git_repository: ($ scs_url $)

#. stack_git_branch (required): ($ scs_branch $)
#+ Branch to use on the stack Git repository.
stack_git_branch: ($ scs_branch $)

#. stack_git_private_key (required): ((git.ssh_key))
#+ SSH key pair to fetch the stack Git repository.
stack_git_private_key: ((git.ssh_key))

#. stack_terraform_path (required): stack-aws-worker/terraform
#+ Path of Terraform files in the stack git repository
stack_terraform_path: stack-gcp-worker/terraform


#
# Config Git repository
#

#. config_git_repository (required): ($ cr_url $)
#+ Git repository URL containing the config of the stack.
config_git_repository: ($ cr_url $)

#. config_git_branch (required): ($ cr_branch $)
#+ Branch to use on the config Git repository.
config_git_branch: ($ cr_branch $)

#. config_git_private_key (required): ((git.ssh_key))
#+ SSH key pair to fetch the config Git repository.
config_git_private_key: ((git.ssh_key))

#. config_terraform_path (required): ($ project $)/terraform/($ environment $)
#+ Path of Terraform files in the config git repository
config_terraform_path: ($ project $)/terraform/($ environment $)


#
# Default variables that shouldn't be changed except if needed
#

#. env (required): ($ environment $)
#+ Name of the project's environment.
env: ($ environment $)

#. project (required): ($ project $)
#+ Name of the project.
project: ($ project $)

#. customer (required): ($ organization_canonical $)
#+ Name of the Cycloid Organization, used as customer variable name.
customer: ($ organization_canonical $)

#. terraform_version (required): '1.0.5'
#+ terraform version used to execute your code.
terraform_version: '1.0.5'